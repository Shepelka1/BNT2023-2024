@page "/formats/create"
@using BussinessLayer;
@using ServiceLayer;
@inject FormatManager formatManager;
@inject NavigationManager navigationManager;
@inject ErrorModel errorModel;

<h3>Create</h3>

<h4>Format</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="OnCreated">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label class="control-label">Name</label>
                <InputText @bind-Value="Model.Extension" class="form-control" autofocus />
                <ValidationMessage For=@( () => Model.Extension)/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

            <label id="error" class="text-danger">@errorModel.Description</label>
        </EditForm>
    </div>
</div>

<div>
    <a href="formats">Back to List</a>
</div>

@code {
    // Instead of document.getElementById(...), write @ref=nameTxtBox
    //InputText nameTxtBox;

    Format Model = new Format();

    async Task OnCreated()
    {
        try
        {
            await formatManager.CreateAsync(Model);
            navigationManager.NavigateTo("formats");
        }
        catch (Exception ex)
        {
            errorModel.Code = "DB";
            errorModel.Description = ex.InnerException != null ? ex.InnerException.Message : ex.Message;
        }

    }


}