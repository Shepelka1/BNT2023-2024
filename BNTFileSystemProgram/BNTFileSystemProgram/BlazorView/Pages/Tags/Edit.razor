@page "/tags/edit/{Id}"
@using BussinessLayer;
@using ServiceLayer;
@inject TagManager tagManager;
@inject NavigationManager navigationManager;
@inject ErrorModel errorModel;

<h3>Edit</h3>

<h4>Tag</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Model" OnValidSubmit="OnUpdated">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label class="control-label"></label>
                <InputText @bind-Value="Model.Content" class="form-control" />
                <ValidationMessage For=@( () => Model.Content) />
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>

            <label id="error" class="text-danger">@errorModel.Description</label>
        </EditForm>
    </div>
</div>

<div>
    <a href="tags">Back to List</a>
</div>

@code {
    Tag Model = new Tag();

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await tagManager.ReadAsync(Id, false, false);
    }

    async Task OnUpdated()
    {
        try
        {
            await tagManager.UpdateAsync(Model);
            navigationManager.NavigateTo("tags");
        }
        catch (Exception ex)
        {
            errorModel.Code = "DB";
            errorModel.Description = ex.InnerException != null ? ex.InnerException.Message : ex.Message;
        }

    }


}
